import matter from "gray-matter";
import type { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import Markdown from "react-markdown";
import rehypeRaw from "rehype-raw";
import styles from "src/pages/blog/blog.module.css";

import { Heading1, Heading2, Heading3 } from "./Markdown";

export const getStaticPaths: GetStaticPaths = async () => {
  const blogSlugs = ((context) => {
    const keys = context.keys();
    const data = keys.map((key: any) => {
      // console.log(key);
      const slug = key.replace(/^.*[\\/]/, "").slice(0, -3);
      // console.log(slug);
      return slug;
    });
    return data;
  })(require.context("src/static/blogData", true, /\.\/.*\.md$/));
  const paths = blogSlugs.map((blogSlug: any) => {
    return `/blog/${blogSlug}`;
  });

  return {
    paths: paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const data = await import(`src/static/blogData/${params?.slug}.md`);
  const doc = matter(data.default);
  return {
    props: {
      markdownBody: doc.content,
    },
  };
};

const Blog: React.VFC = (props: any): JSX.Element => {
  return (
    <div className="pt-8 md:pt-28">
      <Head>
        <title className="">Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mx-auto w-11/12 md:w-3/5">
        <Markdown
          rehypePlugins={[rehypeRaw]}
          className={styles.image}
          components={{
            h1: Heading1,
            h2: Heading2,
            h3: Heading3,
            p: ({ children }) => {
              return <p className="py-3 text-base">{children}</p>;
            },
          }}
        >
          {props.markdownBody}
        </Markdown>
      </div>
    </div>
  );
};

export default Blog;
